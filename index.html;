<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>RPG Jeu en Ligne</title>
</head>
<body>
    <div id="game-container"></div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/phaser/3.55.2/phaser.min.js"></script>
    <script>
        const config = {
            type: Phaser.AUTO,
            width: 800,
            height: 600,
            physics: {
                default: 'arcade',
                arcade: { gravity: { y: 0 }, debug: false }
            },
            scene: { preload, create, update }
        };
        const game = new Phaser.Game(config);

        function preload() {
            // Charger les assets hébergés en ligne
            this.load.image('background', 'https://www.example.com/forest_background.png');
            this.load.spritesheet('hero', 'https://www.example.com/hero_spritesheet.png', { frameWidth: 32, frameHeight: 48 });
            this.load.image('monster', 'https://www.example.com/monster.png');
            this.load.audio('bgMusic', 'https://www.example.com/rpg_music.mp3');
            this.load.audio('battleSound', 'https://www.example.com/battle_sound.mp3');
        }

        let player, cursors;

        function create() {
            // Arrière-plan
            this.add.image(400, 300, 'background');

            // Personnage principal
            player = this.physics.add.sprite(400, 300, 'hero');
            player.setCollideWorldBounds(true);
            this.anims.create({
                key: 'walk',
                frames: this.anims.generateFrameNumbers('hero', { start: 0, end: 3 }),
                frameRate: 10,
                repeat: -1
            });

            // Musique de fond
            const bgMusic = this.sound.add('bgMusic', { volume: 0.5, loop: true });
            bgMusic.play();

            // Monstre et son de combat
            const monster = this.physics.add.sprite(500, 300, 'monster');
            this.physics.add.collider(player, monster, () => {
                this.sound.play('battleSound');
                monster.destroy();
            });

            cursors = this.input.keyboard.createCursorKeys();
        }

        function update() {
            if (cursors.left.isDown) {
                player.setVelocityX(-160);
                player.anims.play('walk', true);
            } else if (cursors.right.isDown) {
                player.setVelocityX(160);
                player.anims.play('walk', true);
            } else {
                player.setVelocityX(0);
                player.anims.stop();
            }

            if (cursors.up.isDown) {
                player.setVelocityY(-160);
            } else if (cursors.down.isDown) {
                player.setVelocityY(160);
            } else {
                player.setVelocityY(0);
            }
        }
    </script>
</body>
</html>
